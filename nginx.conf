user  nginx;


events {
        worker_connections   1000;
    }


http {


  proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=10g
                 inactive=60m use_temp_path=off;

  upstream app {
    least_conn;
    keepalive 500;
    server node_server:3000;
  }

  server {
    listen 80 backlog=4096;
    gzip on;

    location / {
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_pass http://app;

      proxy_cache my_cache;
          proxy_cache_valid any 10m;
      add_header X-Cache-Status $upstream_cache_status;
    }

  }

}







# user  nginx;


# events {
#     worker_connections   1000;
# }



# http {

#         server {

#               listen 80;

#               # resolver 127.0.0.11;
#               # set $upstream http://server

#               location / {
#                 proxy_pass http://node_server:3000;
#               }
#         }
# }




# http {
#         server {

#               listen 80;

#               location / {
#                 proxy_pass http://server:3000;
#               }
#         }
# }

# upstream loadbalance {
#     least_conn;
# }


# server {
#     location / {
#         proxy_pass http://loadbalance;
#     }
# }
